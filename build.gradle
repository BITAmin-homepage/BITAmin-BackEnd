plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'BITAmin'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	runtimeOnly 'mysql:mysql-connector-java:8.0.33'
	//Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'


	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:5.1.0:jakarta"
	implementation "com.querydsl:querydsl-core:5.1.0"
	annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.1.1"

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//S3
	implementation 'software.amazon.awssdk:s3:2.25.0'
	implementation 'software.amazon.awssdk:auth:2.25.0'
}

def querydslDir = "build/generated/querydsl"

sourceSets {
	main {
		java {
			srcDirs += [querydslDir]
		}
	}
}

configurations {
	querydsl.extendsFrom compileClasspath
}

tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory.set(file(querydslDir))
}